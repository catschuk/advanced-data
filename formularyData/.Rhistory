filter(n_added == 0) %>%
group_by(n_dropped) %>%
summarize(count = n())
# find the number of drugs that were on the formulary in 2013, and are still on the formulary now, in the same tier.
humana_total_no_change <- humana_drug_summary %>%
filter(n_dropped == 0 & n_added == 0 & n_tier_changed == 0) %>%
summarize(count_no_change = n())
humana_total_drugs <- humana_drug_summary %>%
filter(n_added == 0) %>%
summarize(count = n())
humana_total_drugs <- humana_drug_summary %>%
filter(n_added == 0) %>%
summarize(count = n())
humana_total_drugs <- humana_drug_summary %>%
filter(n_added == 0) %>%
summarize(count = n()))
humana_total_drugs <- humana_drug_summary %>%
filter(n_added == 0) %>%
summarize(count = n())
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
#load the data
humana <- read_csv("humana_clean.csv") %>%
mutate(year = year(year))
silverscript <- read_csv("silverscript_clean.csv")  %>%
mutate(year = year(year))
##################
# humana
humana_tiers_spread <- humana %>%
group_by(name, year) %>%
summarize(tier_num = median(tier_num)) %>%
spread(year, tier_num)
humana_tiers_gathered <- humana_tiers_spread %>%
gather(year, tier_num, -name) %>%
arrange(name, year) %>%
group_by(name) %>%
mutate(change = as.integer(tier_num-lag(tier_num)),
change = ifelse(change == 0, NA, change),
added = ifelse(tier_num >= 1 & is.na(lag(tier_num)),1,0),
added = ifelse(year == 2013, NA, added),
dropped = ifelse(is.na(tier_num) & lag(tier_num) >= 1,1,0))
humana_drug_summary <- humana_tiers_gathered %>%
group_by(name) %>%
summarize(tier_range = max(tier_num, na.rm=TRUE) - min(tier_num, na.rm=TRUE),
n_added = sum(added, na.rm= TRUE),
n_dropped = sum(dropped, na.rm= TRUE),
n_tier_changed = length(which(!is.na(change))))
#write csv
write.csv(humana_drug_summary, "humana_drug_summary.csv", na = "")
write.csv(humana_tiers_spread, "humana_tiers_spread.csv", na = "")
######################
#analyze the data
humana_total_drugs <- humana_drug_summary %>%
filter(n_added == 0) %>%
summarize(count = n())
#find the total number of drugs that were added to the formulary once after 2013 (excludes drugs that were added, dropped and then added back in)
humana_total_added <- humana_drug_summary %>%
filter(n_added == 1) %>%
group_by(n_added) %>%
summarize(count = n())
#find the total number of drugs that were dropped form the formulary between 2013-2018 (excluding drugs added after 2013)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0) %>%
group_by(n_dropped) %>%
summarize(count = n())
# find the number of drugs that were on the formulary in 2013, and are still on the formulary now, in the same tier.
humana_total_no_change <- humana_drug_summary %>%
filter(n_dropped == 0 & n_added == 0 & n_tier_changed == 0) %>%
summarize(count_no_change = n())
View(humana_total_added)
View(humana_total_drugs)
humana_total_drugs <- humana_drug_summary %>%
summarize(count = n())
View(humana_total_dropped)
View(humana_total_drugs)
View(humana)
View(humana_drug_summary)
View(humana)
drug_category <- read_csv("drug_category.csv")
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
drug_category <- read_csv("drug_category.csv")
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
drug_category <- read_csv("drug_category.csv")
#load drug category data
drug_categories <- read_csv("drug_categories.csv")
View(drug_categories)
#load drug category data
drug_categories <- read_csv("drug_categories.csv")
View(drug_categories)
View(humana)
drug_categories <- read_csv("drug_categories.csv") %>%
mutate(drug_name = text(name))
View(drug_categories)
drug_categories <- read_csv("drug_categories.csv")
View(drug_categories)
drug_categories <- read_csv("drug_categories.csv") %>%
select(drug_categories, name)
View(drug_categories)
drug_categories <- read_csv("drug_categories.csv") %>%
select(drug_type, name)
View(drug_categories)
library(fuzzyjoin)
stringdist_inner_join(humana, drug_categories, by ="name", distance_col = NULL)
library(fuzzyjoin)
install.packages("fuzzyjoin", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(fuzzyjoin)
stringdist_inner_join(humana, drug_categories, by ="name", distance_col = NULL)
join <- stringdist_inner_join(humana, drug_categories, by ="name", distance_col = NULL)
join <- stringdist_inner_join(humana, drug_categories, by ="name", distance_col = TRUE)
library(fuzzyjoin)
library(stringdist)
join <- stringdist_inner_join(humana, drug_categories, by ="name", distance_col = TRUE)
join <- stringdist_inner_join(humana, drug_categories, by ="name", distance_col = NULL)
join <- stringdist_inner_join(humana, drug_categories, by ="name", match_fun=list(`>=`, `<=`), distance_col = NULL)
warnings()
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
#load the data
humana <- read_csv("humana_clean.csv") %>%
mutate(year = year(year))
silverscript <- read_csv("silverscript_clean.csv")  %>%
mutate(year = year(year))
##################
# humana
humana_tiers_spread <- humana %>%
group_by(name, year) %>%
summarize(tier_num = median(tier_num)) %>%
spread(year, tier_num)
humana_tiers_gathered <- humana_tiers_spread %>%
gather(year, tier_num, -name) %>%
arrange(name, year) %>%
group_by(name) %>%
mutate(change = as.integer(tier_num-lag(tier_num)),
change = ifelse(change == 0, NA, change),
added = ifelse(tier_num >= 1 & is.na(lag(tier_num)),1,0),
added = ifelse(year == 2013, NA, added),
dropped = ifelse(is.na(tier_num) & lag(tier_num) >= 1,1,0))
humana_drug_summary <- humana_tiers_gathered %>%
group_by(name) %>%
summarize(tier_range = max(tier_num, na.rm=TRUE) - min(tier_num, na.rm=TRUE),
n_added = sum(added, na.rm= TRUE),
n_dropped = sum(dropped, na.rm= TRUE),
n_tier_changed = length(which(!is.na(change))))
#write csv
write.csv(humana_drug_summary, "humana_drug_summary.csv", na = "")
write.csv(humana_tiers_spread, "humana_tiers_spread.csv", na = "")
######################
#analyze the data
#find the total number of drugs that have been on the formulary for at least one year between 2013-2018
humana_total_drugs <- humana_drug_summary %>%
summarize(count = n())
#find the total number of drugs that were added to the formulary once after 2013 (excludes drugs that were added, dropped and then added back in)
humana_total_added <- humana_drug_summary %>%
filter(n_added == 1) %>%
group_by(n_added) %>%
summarize(count = n())
#find the total number of drugs that were dropped form the formulary between 2013-2018 (excluding drugs added after 2013)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0) %>%
group_by(n_dropped) %>%
summarize(count = n())
# find the number of drugs that were on the formulary in 2013, and are still on the formulary now, in the same tier.
humana_total_no_change <- humana_drug_summary %>%
filter(n_dropped == 0 & n_added == 0 & n_tier_changed == 0) %>%
summarize(count_no_change = n())
#load drug category data
drug_categories <- read_csv("drug_categories.csv") %>%
select(drug_type, name)
humana_categories_inner <- inner_join(humana, drug_categories, by=c("name" = "name"))
View(humana_categories_inner)
View(humana_categories_inner)
View(humana_categories_inner)
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
#load the data
humana <- read_csv("humana_clean.csv") %>%
mutate(year = year(year))
##################
# humana
humana_tiers_spread <- humana %>%
group_by(name, year) %>%
summarize(tier_num = median(tier_num)) %>%
spread(year, tier_num)
humana_tiers_gathered <- humana_tiers_spread %>%
gather(year, tier_num, -name) %>%
arrange(name, year) %>%
group_by(name) %>%
mutate(change = as.integer(tier_num-lag(tier_num)),
change = ifelse(change == 0, NA, change),
added = ifelse(tier_num >= 1 & is.na(lag(tier_num)),1,0),
added = ifelse(year == 2013, NA, added),
dropped = ifelse(is.na(tier_num) & lag(tier_num) >= 1,1,0))
humana_drug_summary <- humana_tiers_gathered %>%
group_by(name) %>%
summarize(tier_range = max(tier_num, na.rm=TRUE) - min(tier_num, na.rm=TRUE),
n_added = sum(added, na.rm= TRUE),
n_dropped = sum(dropped, na.rm= TRUE),
n_tier_changed = length(which(!is.na(change))))
#write csv
write.csv(humana_drug_summary, "humana_drug_summary.csv", na = "")
write.csv(humana_tiers_spread, "humana_tiers_spread.csv", na = "")
######################
#analyze the data
#find the total number of drugs that have been on the formulary for at least one year between 2013-2018
humana_total_drugs <- humana_drug_summary %>%
summarize(count = n())
#find the total number of drugs that were added to the formulary once after 2013 (excludes drugs that were added, dropped and then added back in)
humana_total_added <- humana_drug_summary %>%
filter(n_added == 1) %>%
group_by(n_added) %>%
summarize(count = n())
#find the total number of drugs that were dropped form the formulary between 2013-2018 (excluding drugs added after 2013)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0) %>%
group_by(n_dropped) %>%
summarize(count = n())
# find the number of drugs that were on the formulary in 2013, and are still on the formulary now, in the same tier.
humana_total_no_change <- humana_drug_summary %>%
filter(n_dropped == 0 & n_added == 0 & n_tier_changed == 0) %>%
summarize(count_no_change = n())
#load drug category data
drug_categories <- read_csv("drug_categories.csv") %>%
select(drug_type, name)
humana_categories_inner <- inner_join(humana, drug_categories, by=c("name" = "name"))
humana_categories_inner <- inner_join(humana, drug_categories, by=c("name" = "name"))
View(drug_categories)
#load drug category data
drug_categories <- read_csv("drug_categories.csv") %>%
select(drug_type, name)
humana <- read_csv("humana_clean.csv") %>%
mutate(year = year(year))
humana_categories_inner <- inner_join(humana, drug_categories, by=c("name" = "name"))
View(humana_categories_inner)
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
> setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
# load required packages
library(rvest)
library(dplyr)
# code to scrape one Humana page (Preferred)
# grab the html code
tmpH <- read_html("https://q1medicare.com/PartD-BrowseMedicare-2018PlanFormulary.php?letter=A&formulary=00018254&contractId=S5884&planId=114&segmentId=0&zipCountyCode=0&ccountyName=Statewide&stateReg=32CA&zip=&planType=P&mode=state&prAuth=E&stepTh=E&qtyLmt=E&tier1=&tier2=&tier3=&tier4=&tier5=&tier6=&sort=drugNameasc") %>%
# read the table
html_table(fill = TRUE) %>%
# convert it to a data frame
as.data.frame() %>%
# only the first 6 columns contain data, so select those
select(1:6) %>%
# remove the extra header rows
slice(5:n())
# rename columns
names(tmpH) <- c("name","tier_num","tier_desc","cost_30","cost_90","management")
# filter out the header rows within the table
tmpH <- tmp %>%
filter(name != "Drug Name")
##########################################
# loops to scrape formularies
# these variables common to both formularies
# base url
base <- "https://q1medicare.com/PartD-BrowseMedicare-"
# middle of url
middle <- "PlanFormulary.php?letter="
# url suffix
suffix <- "&segmentId=0&zipCountyCode=0&ccountyName=Statewide&stateReg=32CA&zip=&planType=P&mode=state&prAuth=E&stepTh=E&qtyLmt=E&tier1=&tier2=&tier3=&tier4=&tier5=&tier6=&sort=drugNameasc"
# letters
letters <- c("0-9",LETTERS)
# these specific to humana
humana1 <- data_frame(year=c(2018:2013),
form=c("&formulary=00018254",
"&formulary=00017216",
"&formulary=00016344",
"&formulary=00015080",
"&formulary=00014054",
"&formulary=00013259"))
humana2 <- "contractId=S5884&planId=114"
# empty data frame to get results of scrape
humana_df <- data_frame()
for (y in humana1$year) {
tmpH1 <- humana1 %>%
filter(year == y)
for (l in letters) {
try(tmpH2 <- read_html(paste0(base,
tmpH1$year,
middle,
l,
tmpH1$form,
humana2,
suffix)) %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(1:6) %>%
slice(5:n()))
try(names(tmpH2) <- c("name","tier_num","tier_desc","cost_30","cost_90","management"))
try(tmpH2 <- tmpH2 %>%
filter(name != "Drug Name") %>%
mutate(year = tmpH1$year))
try(humana_df <- bind_rows(humana_df,tmpH2))
print(paste0(y," ",l))
rm(tmpH2)
}
}
> setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
# load required packages
library(rvest)
library(dplyr)
# code to scrape one Humana page (Preferred)
# grab the html code
tmpH <- read_html("https://q1medicare.com/PartD-BrowseMedicare-2018PlanFormulary.php?letter=A&formulary=00018254&contractId=S5884&planId=114&segmentId=0&zipCountyCode=0&ccountyName=Statewide&stateReg=32CA&zip=&planType=P&mode=state&prAuth=E&stepTh=E&qtyLmt=E&tier1=&tier2=&tier3=&tier4=&tier5=&tier6=&sort=drugNameasc") %>%
# read the table
html_table(fill = TRUE) %>%
# convert it to a data frame
as.data.frame() %>%
# only the first 6 columns contain data, so select those
select(1:6) %>%
# remove the extra header rows
slice(5:n())
# rename columns
names(tmpH) <- c("name","tier_num","tier_desc","cost_30","cost_90","management")
# filter out the header rows within the table
tmpH <- tmp %>%
filter(name != "Drug Name")
##########################################
# loops to scrape formularies
# these variables common to both formularies
# base url
base <- "https://q1medicare.com/PartD-BrowseMedicare-"
# middle of url
middle <- "PlanFormulary.php?letter="
# url suffix
suffix <- "&segmentId=0&zipCountyCode=0&ccountyName=Statewide&stateReg=32CA&zip=&planType=P&mode=state&prAuth=E&stepTh=E&qtyLmt=E&tier1=&tier2=&tier3=&tier4=&tier5=&tier6=&sort=drugNameasc"
# letters
letters <- c("0-9",LETTERS)
# these specific to humana
humana1 <- data_frame(year=c(2018:2013),
form=c("&formulary=00018254",
"&formulary=00017216",
"&formulary=00016344",
"&formulary=00015080",
"&formulary=00014054",
"&formulary=00013259"))
humana2 <- "contractId=S5884&planId=114"
# empty data frame to get results of scrape
humana_df <- data_frame()
for (y in humana1$year) {
tmpH1 <- humana1 %>%
filter(year == y)
for (l in letters) {
try(tmpH2 <- read_html(paste0(base,
tmpH1$year,
middle,
l,
tmpH1$form,
humana2,
suffix)) %>%
html_table(fill = TRUE) %>%
as.data.frame() %>%
select(1:6) %>%
slice(5:n()))
try(names(tmpH2) <- c("name","tier_num","tier_desc","cost_30","cost_90","management"))
try(tmpH2 <- tmpH2 %>%
filter(name != "Drug Name") %>%
mutate(year = tmpH1$year))
try(humana_df <- bind_rows(humana_df,tmpH2))
print(paste0(y," ",l))
rm(tmpH2)
}
}
View(humana_df)
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(reshape)
#load the data
humana <- read_csv("humana_clean.csv")
silverscript <- read_csv("silverscript_clean.csv")
#calculate tier change per drug, over time:
#reorder columns and extract year from date column
humana2 <- humana[,c(7,1,2)] %>%
group_by(name) %>%
mutate(year = year(year))
#reshape data using the melt and cast functions from the reshape package
humana_reshape1 <- melt(humana2,id.vars=c("name","year"))
humana_reshape2 <- cast(humana_reshape1,name~variable+year)
#calculate tier change from 2013 to 2014 (NOTE: There's probably a better way to do this. If I do it this way, I end up with a zero when there is no tier change, and a negative number when a drug either moves down a tier OR is dropped off the formulary completely. Since moving down a tier would mean cheaper prices, but falling off the formulary means removing access to a drug, I need to figure out a way to distinguish between the two in the dataset. Perhaps we can discuss on Sunday.)
humana_tier_change <- humana_reshape2 %>%
mutate(tier_diff_2013_2018 = tier_num_2018 - tier_num_2013 ) %>%
arrange(tier_diff_2013_2018)
#write csv
write.csv(humana_tier_change, "humana_tier_change.csv", na = "")
save.image("~/Desktop/2018_spring/advancedData/classData/week12/week12.RData")
setwd("~/Desktop/2018_spring/advancedData/finalProject/formularyData")
#load the required packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
#load the data
humana <- read_csv("humana_clean.csv") %>%
mutate(year = year(year))
##################
# humana
humana_tiers_spread <- humana %>%
group_by(name, year) %>%
summarize(tier_num = median(tier_num)) %>%
spread(year, tier_num)
humana_tiers_gathered <- humana_tiers_spread %>%
gather(year, tier_num, -name) %>%
arrange(name, year) %>%
group_by(name) %>%
mutate(change = as.integer(tier_num-lag(tier_num)),
change = ifelse(change == 0, NA, change),
added = ifelse(tier_num >= 1 & is.na(lag(tier_num)),1,0),
added = ifelse(year == 2013, NA, added),
dropped = ifelse(is.na(tier_num) & lag(tier_num) >= 1,1,0))
humana_drug_summary <- humana_tiers_gathered %>%
group_by(name) %>%
summarize(tier_range = max(tier_num, na.rm=TRUE) - min(tier_num, na.rm=TRUE),
n_added = sum(added, na.rm= TRUE),
n_dropped = sum(dropped, na.rm= TRUE),
n_tier_changed = length(which(!is.na(change))))
#write csv
write.csv(humana_drug_summary, "humana_drug_summary.csv", na = "")
write.csv(humana_tiers_spread, "humana_tiers_spread.csv", na = "")
######################
#analyze the data
#find the total number of drugs that have been on the formulary for at least one year between 2013-2018
humana_total_drugs <- humana_drug_summary %>%
summarize(count = n())
#find the total number of drugs that were added to the formulary once after 2013 (excludes drugs that were added, dropped and then added back in)
humana_total_added <- humana_drug_summary %>%
filter(n_added == 1) %>%
group_by(n_added) %>%
summarize(count = n())
#find the total number of drugs that were dropped form the formulary between 2013-2018 (excluding drugs added after 2013)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0) %>%
group_by(n_dropped) %>%
summarize(count = n())
# find the number of drugs that were on the formulary in 2013, and are still on the formulary now, in the same tier.
humana_total_no_change <- humana_drug_summary %>%
filter(n_dropped == 0 & n_added == 0 & n_tier_changed == 0) %>%
summarize(count_no_change = n())
save.image("~/Desktop/2018_spring/advancedData/classData/week12/week12.RData")
View(humana_total_no_change)
View(humana_drug_summary)
View(humana_tiers_spread)
View(humana_drug_summary)
View(humana_tiers_gathered)
View(humana_total_drugs)
humana_tiers_gathered
View(humana_tiers_gathered)
View(humana_drug_summary)
View(humana_total_dropped)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0, n_dropped == 1) %>%
group_by(n_dropped) %>%
summarize(count = n())
View(humana_total_dropped)
humana_total_dropped <- humana_drug_summary %>%
filter(n_dropped == 1) %>%
group_by(n_dropped) %>%
summarize(count = n())
View(humana_total_dropped)
humana_total_dropped <- humana_drug_summary %>%
filter(n_added == 0, n_dropped == 1) %>%
group_by(n_dropped) %>%
summarize(count = n())
View(humana_total_added)
View(humana_total_no_change)
View(humana_tiers_gathered)
humana_patient <- humana_tiers_gathered %>%
filter(grepl("HUMALOG & HUMILIN & ATORVASTATAN & LOSARTAN", name, ignore.case=TRUE))
View(humana_patient)
humana_patient <- humana_tiers_gathered %>%
filter(grepl("HUMALOG|HUMILIN|ATORVASTATAN|LOSARTAN", name, ignore.case=TRUE))
View(humana_patient)
#check how my imaginary Medicare patient would fare if they stayed with Humana from 2013-2018
humana_patient <- humana_tiers_gathered %>%
filter(grepl("HUMALOG|HUMILIN|ATORVASTATIN|LOSARTAN", name, ignore.case=TRUE))
View(humana_patient)
humana_patient <- humana_tiers_spread %>%
filter(grepl("HUMALOG|HUMILIN|ATORVASTATIN|LOSARTAN", name, ignore.case=TRUE))
View(humana_patient)
View(humana_tiers_spread)
humana_patient <- humana_tiers_spread %>%
filter(grepl("HUMALOG|HUMULIN|ATORVASTATIN|LOSARTAN", name, ignore.case=TRUE))
View(humana_patient)
humana_patient <- humana_tiers_spread %>%
filter(name == HUMALOG|HUMULIN|ATORVASTATIN|LOSARTAN)
humana_patient <- humana_tiers_spread %>%
filter(name == HUMULOG|HUMULIN|ATORVASTATIN|LOSARTAN)
